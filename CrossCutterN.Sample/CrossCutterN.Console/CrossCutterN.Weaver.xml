<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CrossCutterN.Weaver</name>
    </assembly>
    <members>
        <member name="T:CrossCutterN.Weaver.Reference.BaseReference">
            <summary>
            Reference to advice module content implemetnation.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.BaseReference.AttributeProperty">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.BaseReference.CustomAttribute">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.BaseReference.Execution">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.BaseReference.ExecutionContext">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.BaseReference.Parameter">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.BaseReference.MetadataFactory">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.BaseReference.Return">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.BaseReference.Builder">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.BaseReference.BackStage">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.BaseReference.Glancer">
            <inheritdoc/>
        </member>
        <member name="T:CrossCutterN.Weaver.Reference.BaseReferenceFactory">
            <summary>
            Base reference factory.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Reference.BaseReferenceFactory.InitializeBaseReference(Mono.Cecil.ModuleDefinition)">
            <summary>
            Initializes a new instance of of <see cref="T:CrossCutterN.Weaver.Reference.IBaseReference"/> interface.
            </summary>
            <param name="module">The current module that this <see cref="T:CrossCutterN.Weaver.Reference.IBaseReference"/> is for.</param>
            <returns>The <see cref="T:CrossCutterN.Weaver.Reference.IBaseReference"/> initialized.</returns>
        </member>
        <member name="T:CrossCutterN.Weaver.Reference.Base.Metadata.AttributePropertyReference">
            <summary>
            Reference to <see cref="T:CrossCutterN.Base.Metadata.IAttributeProperty"/> interface implementation.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Reference.Base.Metadata.AttributePropertyReference.#ctor(Mono.Cecil.ModuleDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:CrossCutterN.Weaver.Reference.Base.Metadata.AttributePropertyReference"/> class.
            </summary>
            <param name="module">The module that this reference is built for.</param>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.AttributePropertyReference.CrossCutterN#Weaver#Reference#Base#Metadata#IAttributePropertyReference#TypeReference">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.AttributePropertyReference.TypeReference">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Reference.Base.Metadata.AttributePropertyReference.Build">
            <inheritdoc/>
        </member>
        <member name="T:CrossCutterN.Weaver.Reference.Base.Metadata.CustomAttributeBuilderReference">
            <summary>
            Reference to <see cref="T:CrossCutterN.Base.Metadata.ICustomAttributeBuilder"/> interface implementation.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Reference.Base.Metadata.CustomAttributeBuilderReference.#ctor(Mono.Cecil.ModuleDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:CrossCutterN.Weaver.Reference.Base.Metadata.CustomAttributeBuilderReference"/> class.
            </summary>
            <param name="module">The module that this reference is built for.</param>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.CustomAttributeBuilderReference.CrossCutterN#Weaver#Reference#Base#Metadata#ICustomAttributeBuilderReference#TypeReference">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.CustomAttributeBuilderReference.TypeReference">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.CustomAttributeBuilderReference.CrossCutterN#Weaver#Reference#Base#Metadata#ICustomAttributeBuilderReference#ReadOnlyTypeReference">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.CustomAttributeBuilderReference.ReadOnlyTypeReference">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.CustomAttributeBuilderReference.CrossCutterN#Weaver#Reference#Base#Metadata#ICustomAttributeBuilderReference#AddAttributePropertyMethod">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.CustomAttributeBuilderReference.AddAttributePropertyMethod">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.CustomAttributeBuilderReference.CrossCutterN#Weaver#Reference#Base#Metadata#ICustomAttributeBuilderReference#BuildMethod">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.CustomAttributeBuilderReference.BuildMethod">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Reference.Base.Metadata.CustomAttributeBuilderReference.Build">
            <inheritdoc/>
        </member>
        <member name="T:CrossCutterN.Weaver.Reference.Base.Metadata.ExecutionBuilderReference">
            <summary>
            Reference to <see cref="T:CrossCutterN.Base.Metadata.IExecutionBuilder"/> interface implementation.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Reference.Base.Metadata.ExecutionBuilderReference.#ctor(Mono.Cecil.ModuleDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:CrossCutterN.Weaver.Reference.Base.Metadata.ExecutionBuilderReference"/> class.
            </summary>
            <param name="module">The module that the execution metadata reference will be initialized for.</param>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.ExecutionBuilderReference.CrossCutterN#Weaver#Reference#Base#Metadata#IExecutionBuilderReference#TypeReference">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.ExecutionBuilderReference.TypeReference">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.ExecutionBuilderReference.CrossCutterN#Weaver#Reference#Base#Metadata#IExecutionBuilderReference#ReadOnlyTypeReference">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.ExecutionBuilderReference.ReadOnlyTypeReference">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.ExecutionBuilderReference.CrossCutterN#Weaver#Reference#Base#Metadata#IExecutionBuilderReference#AddParameterMethod">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.ExecutionBuilderReference.AddParameterMethod">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.ExecutionBuilderReference.CrossCutterN#Weaver#Reference#Base#Metadata#IExecutionBuilderReference#BuildMethod">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.ExecutionBuilderReference.BuildMethod">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Reference.Base.Metadata.ExecutionBuilderReference.Build">
            <inheritdoc/>
        </member>
        <member name="T:CrossCutterN.Weaver.Reference.Base.Metadata.ExecutionContextReference">
            <summary>
            Reference to <see cref="T:CrossCutterN.Base.Metadata.IExecutionContext"/> interface implementation.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Reference.Base.Metadata.ExecutionContextReference.#ctor(Mono.Cecil.ModuleDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:CrossCutterN.Weaver.Reference.Base.Metadata.ExecutionContextReference"/> class.
            </summary>
            <param name="module">The module that this reference is defined for.</param>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.ExecutionContextReference.CrossCutterN#Weaver#Reference#Base#Metadata#IExecutionContextReference#TypeReference">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.ExecutionContextReference.TypeReference">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Reference.Base.Metadata.ExecutionContextReference.Build">
            <inheritdoc/>
        </member>
        <member name="T:CrossCutterN.Weaver.Reference.Base.Metadata.IAttributePropertyReference">
            <summary>
            Reference to <see cref="T:CrossCutterN.Base.Metadata.IAttributeProperty"/> interface.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IAttributePropertyReference.TypeReference">
            <summary>
            Gets reference to the interface type.
            </summary>
        </member>
        <member name="T:CrossCutterN.Weaver.Reference.Base.Metadata.IAttributePropertyReferenceBuilder">
            <summary>
            Reference to <see cref="T:CrossCutterN.Base.Metadata.IAttributeProperty"/> interface to be built up.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IAttributePropertyReferenceBuilder.TypeReference">
            <summary>
            Sets reference to the interface type.
            </summary>
        </member>
        <member name="T:CrossCutterN.Weaver.Reference.Base.Metadata.ICustomAttributeBuilderReference">
            <summary>
            Reference to <see cref="T:CrossCutterN.Base.Metadata.ICustomAttributeBuilder"/> interface.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.ICustomAttributeBuilderReference.TypeReference">
            <summary>
            Gets reference to the type.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.ICustomAttributeBuilderReference.ReadOnlyTypeReference">
            <summary>
            Gets reference to the readonly only interface type it can build to.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.ICustomAttributeBuilderReference.AddAttributePropertyMethod">
            <summary>
            Gets reference to AddAttributeProperty method.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.ICustomAttributeBuilderReference.BuildMethod">
            <summary>
            Gets reference to Build method.
            </summary>
        </member>
        <member name="T:CrossCutterN.Weaver.Reference.Base.Metadata.ICustomAttributeBuilderReferenceBuilder">
            <summary>
            Reference to <see cref="T:CrossCutterN.Base.Metadata.ICustomAttributeBuilder"/> interface to be built up.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.ICustomAttributeBuilderReferenceBuilder.TypeReference">
            <summary>
            Sets reference to the interface type.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.ICustomAttributeBuilderReferenceBuilder.ReadOnlyTypeReference">
            <summary>
            Sets reference to the readonly only interface type it can build to.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.ICustomAttributeBuilderReferenceBuilder.AddAttributePropertyMethod">
            <summary>
            Sets reference to AddAttributeProperty method.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.ICustomAttributeBuilderReferenceBuilder.BuildMethod">
            <summary>
            Sets reference to Build method.
            </summary>
        </member>
        <member name="T:CrossCutterN.Weaver.Reference.Base.Metadata.IExecutionBuilderReference">
            <summary>
            Reference to <see cref="T:CrossCutterN.Base.Metadata.IExecutionBuilder"/> interface.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IExecutionBuilderReference.TypeReference">
            <summary>
            Gets reference to the type.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IExecutionBuilderReference.ReadOnlyTypeReference">
            <summary>
            Gets reference to the read only interface type it can build to.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IExecutionBuilderReference.AddParameterMethod">
            <summary>
            Gets reference to AddParameter method.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IExecutionBuilderReference.BuildMethod">
            <summary>
            Gets reference to Build method.
            </summary>
        </member>
        <member name="T:CrossCutterN.Weaver.Reference.Base.Metadata.IExecutionBuilderReferenceBuilder">
            <summary>
            Reference to <see cref="T:CrossCutterN.Base.Metadata.IExecutionBuilder"/> interface to be built up.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IExecutionBuilderReferenceBuilder.TypeReference">
            <summary>
            Sets reference to the interface type.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IExecutionBuilderReferenceBuilder.ReadOnlyTypeReference">
            <summary>
            Sets reference to the readonly only interface type it can build to.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IExecutionBuilderReferenceBuilder.AddParameterMethod">
            <summary>
            Sets reference to AddParameter method.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IExecutionBuilderReferenceBuilder.BuildMethod">
            <summary>
            Sets reference to Build method.
            </summary>
        </member>
        <member name="T:CrossCutterN.Weaver.Reference.Base.Metadata.IExecutionContextReference">
            <summary>
            Reference to <see cref="T:CrossCutterN.Base.Metadata.IExecutionContext"/> interface.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IExecutionContextReference.TypeReference">
            <summary>
            Gets reference to the type.
            </summary>
        </member>
        <member name="T:CrossCutterN.Weaver.Reference.Base.Metadata.IExecutionContextReferenceBuilder">
            <summary>
            Reference to <see cref="T:CrossCutterN.Base.Metadata.IExecutionContext"/> interface to be built up.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IExecutionContextReferenceBuilder.TypeReference">
            <summary>
            Sets reference to the readonly only interface type it can build to.
            </summary>
        </member>
        <member name="T:CrossCutterN.Weaver.Reference.Base.Metadata.IMetadataFactoryReference">
            <summary>
            Reference to <see cref="T:CrossCutterN.Base.Metadata.MetadataFactory"/> class.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IMetadataFactoryReference.InitializeExecutionMethod">
            <summary>
            Gets reference to InitializeExecution method.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IMetadataFactoryReference.InitializeExecutionContextMethod">
            <summary>
            Gets reference to InitializeExecutionContext method.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IMetadataFactoryReference.InitializeParameterMethod">
            <summary>
            Gets reference to InitializeParameter method.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IMetadataFactoryReference.InitializeCustomAttributeMethod">
            <summary>
            Gets reference to InitializeCustomAttribute method.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IMetadataFactoryReference.InitializeAttributePropertyMethod">
            <summary>
            Gets reference to InitializeAttributeProperty method.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IMetadataFactoryReference.InitializeReturnMethod">
            <summary>
            Gets reference to InitializeReturn method.
            </summary>
        </member>
        <member name="T:CrossCutterN.Weaver.Reference.Base.Metadata.IMetadataFactoryReferenceBuilder">
            <summary>
            Reference to <see cref="T:CrossCutterN.Base.Metadata.MetadataFactory"/> class to be built up.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IMetadataFactoryReferenceBuilder.InitializeExecutionMethod">
            <summary>
            Sets reference to InitializeExecution method.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IMetadataFactoryReferenceBuilder.InitializeExecutionContextMethod">
            <summary>
            Sets reference to InitializeExecutionContext method.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IMetadataFactoryReferenceBuilder.InitializeParameterMethod">
            <summary>
            Sets reference to InitializeParameter method.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IMetadataFactoryReferenceBuilder.InitializeCustomAttributeMethod">
            <summary>
            Sets reference to InitializeCustomAttribute method.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IMetadataFactoryReferenceBuilder.InitializeAttributePropertyMethod">
            <summary>
            Sets reference to InitializeAttributeProperty method.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IMetadataFactoryReferenceBuilder.InitializeReturnMethod">
            <summary>
            Sets reference to InitializeReturn method.
            </summary>
        </member>
        <member name="T:CrossCutterN.Weaver.Reference.Base.Metadata.IParameterBuilderReference">
            <summary>
            Reference to <see cref="T:CrossCutterN.Base.Metadata.IParameterBuilder"/> interface.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IParameterBuilderReference.TypeReference">
            <summary>
            Gets reference to the interface type.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IParameterBuilderReference.ReadOnlyTypeReference">
            <summary>
            Gets reference to the readonly only interface type it can build to.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IParameterBuilderReference.AddCustomAttributeMethod">
            <summary>
            Gets reference to AddCustomAttribute method.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IParameterBuilderReference.BuildMethod">
            <summary>
            Gets reference to Build method.
            </summary>
        </member>
        <member name="T:CrossCutterN.Weaver.Reference.Base.Metadata.IParameterBuilderReferenceBuilder">
            <summary>
            Reference to <see cref="T:CrossCutterN.Base.Metadata.IParameterBuilder"/> interface to be built up.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IParameterBuilderReferenceBuilder.TypeReference">
            <summary>
            Sets reference to the interface type.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IParameterBuilderReferenceBuilder.ReadOnlyTypeReference">
            <summary>
            Sets reference to the readonly only interface type it can build to.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IParameterBuilderReferenceBuilder.AddCustomAttributeMethod">
            <summary>
            Sets reference to AddCustomAttribute method.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IParameterBuilderReferenceBuilder.BuildMethod">
            <summary>
            Sets reference to Build method.
            </summary>
        </member>
        <member name="T:CrossCutterN.Weaver.Reference.Base.Metadata.IReturnBuilderReference">
            <summary>
            Reference to <see cref="T:CrossCutterN.Base.Metadata.IReturnBuilder"/> interface.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IReturnBuilderReference.TypeReference">
            <summary>
            Gets reference to type interface type.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IReturnBuilderReference.ReadOnlyTypeReference">
            <summary>
            Gets reference to the readonly only interface type it can build to.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IReturnBuilderReference.HasReturnSetter">
            <summary>
            Gets reference to setter method of HasReturn property.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IReturnBuilderReference.ValueSetter">
            <summary>
            Gets reference to setter method of Value property.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IReturnBuilderReference.BuildMethod">
            <summary>
            Gets reference to Build method.
            </summary>
        </member>
        <member name="T:CrossCutterN.Weaver.Reference.Base.Metadata.IReturnBuilderReferenceBuilder">
            <summary>
            Reference to <see cref="T:CrossCutterN.Base.Metadata.IReturnBuilder"/> interface to be built up.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IReturnBuilderReferenceBuilder.TypeReference">
            <summary>
            Sets reference to the interface type.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IReturnBuilderReferenceBuilder.ReadOnlyTypeReference">
            <summary>
            Sets reference to the readonly only interface type it can build to.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IReturnBuilderReferenceBuilder.HasReturnSetter">
            <summary>
            Sets reference to setter method of HasReturn property.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IReturnBuilderReferenceBuilder.ValueSetter">
            <summary>
            Sets reference to setter method of Value property.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.IReturnBuilderReferenceBuilder.BuildMethod">
            <summary>
            Sets reference to Build method.
            </summary>
        </member>
        <member name="T:CrossCutterN.Weaver.Reference.Base.Metadata.MetadataFactoryReference">
            <summary>
            Reference to <see cref="T:CrossCutterN.Base.Metadata.MetadataFactory"/> class implementation.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Reference.Base.Metadata.MetadataFactoryReference.#ctor(Mono.Cecil.ModuleDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:CrossCutterN.Weaver.Reference.Base.Metadata.MetadataFactoryReference"/> class.
            </summary>
            <param name="module">The module that this reference is built for.</param>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.MetadataFactoryReference.CrossCutterN#Weaver#Reference#Base#Metadata#IMetadataFactoryReference#InitializeExecutionMethod">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.MetadataFactoryReference.InitializeExecutionMethod">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.MetadataFactoryReference.CrossCutterN#Weaver#Reference#Base#Metadata#IMetadataFactoryReference#InitializeExecutionContextMethod">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.MetadataFactoryReference.InitializeExecutionContextMethod">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.MetadataFactoryReference.CrossCutterN#Weaver#Reference#Base#Metadata#IMetadataFactoryReference#InitializeParameterMethod">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.MetadataFactoryReference.InitializeParameterMethod">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.MetadataFactoryReference.CrossCutterN#Weaver#Reference#Base#Metadata#IMetadataFactoryReference#InitializeCustomAttributeMethod">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.MetadataFactoryReference.InitializeCustomAttributeMethod">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.MetadataFactoryReference.CrossCutterN#Weaver#Reference#Base#Metadata#IMetadataFactoryReference#InitializeAttributePropertyMethod">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.MetadataFactoryReference.InitializeAttributePropertyMethod">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.MetadataFactoryReference.CrossCutterN#Weaver#Reference#Base#Metadata#IMetadataFactoryReference#InitializeReturnMethod">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.MetadataFactoryReference.InitializeReturnMethod">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Reference.Base.Metadata.MetadataFactoryReference.Build">
            <inheritdoc/>
        </member>
        <member name="T:CrossCutterN.Weaver.Reference.Base.Metadata.ParameterBuilderReference">
            <summary>
            Reference to <see cref="T:CrossCutterN.Base.Metadata.IParameterBuilder"/> interface implementation.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Reference.Base.Metadata.ParameterBuilderReference.#ctor(Mono.Cecil.ModuleDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:CrossCutterN.Weaver.Reference.Base.Metadata.ParameterBuilderReference"/> class.
            </summary>
            <param name="module">The module that this reference is built for.</param>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.ParameterBuilderReference.CrossCutterN#Weaver#Reference#Base#Metadata#IParameterBuilderReference#TypeReference">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.ParameterBuilderReference.TypeReference">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.ParameterBuilderReference.CrossCutterN#Weaver#Reference#Base#Metadata#IParameterBuilderReference#ReadOnlyTypeReference">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.ParameterBuilderReference.ReadOnlyTypeReference">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.ParameterBuilderReference.CrossCutterN#Weaver#Reference#Base#Metadata#IParameterBuilderReference#AddCustomAttributeMethod">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.ParameterBuilderReference.AddCustomAttributeMethod">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.ParameterBuilderReference.CrossCutterN#Weaver#Reference#Base#Metadata#IParameterBuilderReference#BuildMethod">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.ParameterBuilderReference.BuildMethod">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Reference.Base.Metadata.ParameterBuilderReference.Build">
            <inheritdoc/>
        </member>
        <member name="T:CrossCutterN.Weaver.Reference.Base.Metadata.ReturnBuilderReference">
            <summary>
            Reference to <see cref="T:CrossCutterN.Base.Metadata.IReturnBuilder"/> interface implementation.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Reference.Base.Metadata.ReturnBuilderReference.#ctor(Mono.Cecil.ModuleDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:CrossCutterN.Weaver.Reference.Base.Metadata.ReturnBuilderReference"/> class.
            </summary>
            <param name="module">The module that this reference is built for.</param>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.ReturnBuilderReference.CrossCutterN#Weaver#Reference#Base#Metadata#IReturnBuilderReference#TypeReference">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.ReturnBuilderReference.TypeReference">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.ReturnBuilderReference.CrossCutterN#Weaver#Reference#Base#Metadata#IReturnBuilderReference#ReadOnlyTypeReference">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.ReturnBuilderReference.ReadOnlyTypeReference">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.ReturnBuilderReference.CrossCutterN#Weaver#Reference#Base#Metadata#IReturnBuilderReference#HasReturnSetter">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.ReturnBuilderReference.HasReturnSetter">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.ReturnBuilderReference.CrossCutterN#Weaver#Reference#Base#Metadata#IReturnBuilderReference#ValueSetter">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.ReturnBuilderReference.ValueSetter">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.ReturnBuilderReference.CrossCutterN#Weaver#Reference#Base#Metadata#IReturnBuilderReference#BuildMethod">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Metadata.ReturnBuilderReference.BuildMethod">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Reference.Base.Metadata.ReturnBuilderReference.Build">
            <inheritdoc/>
        </member>
        <member name="T:CrossCutterN.Weaver.Reference.Base.Switch.AspectSwitchBuilderReference">
            <summary>
            Reference to <see cref="T:CrossCutterN.Base.Switch.IAspectSwitchBuilder"/> implementation.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Reference.Base.Switch.AspectSwitchBuilderReference.#ctor(Mono.Cecil.ModuleDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:CrossCutterN.Weaver.Reference.Base.Switch.AspectSwitchBuilderReference"/> class.
            </summary>
            <param name="module">The module that this reference is built for.</param>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Switch.AspectSwitchBuilderReference.CrossCutterN#Weaver#Reference#Base#Switch#IAspectSwitchBuilderReference#RegisterSwitchMethod">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Switch.AspectSwitchBuilderReference.RegisterSwitchMethod">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Switch.AspectSwitchBuilderReference.CrossCutterN#Weaver#Reference#Base#Switch#IAspectSwitchBuilderReference#CompleteMethod">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Switch.AspectSwitchBuilderReference.CompleteMethod">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Reference.Base.Switch.AspectSwitchBuilderReference.Build">
            <inheritdoc/>
        </member>
        <member name="T:CrossCutterN.Weaver.Reference.Base.Switch.AspectSwitchGlancerReference">
            <summary>
            Reference to <see cref="T:CrossCutterN.Base.Switch.IAspectSwitchGlancer"/> interface implementation.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Reference.Base.Switch.AspectSwitchGlancerReference.#ctor(Mono.Cecil.ModuleDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:CrossCutterN.Weaver.Reference.Base.Switch.AspectSwitchGlancerReference"/> class.
            </summary>
            <param name="module">The module that this reference is built for.</param>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Switch.AspectSwitchGlancerReference.CrossCutterN#Weaver#Reference#Base#Switch#IAspectSwitchGlancerReference#IsOnMethod">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Switch.AspectSwitchGlancerReference.IsOnMethod">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Reference.Base.Switch.AspectSwitchGlancerReference.Build">
            <inheritdoc/>
        </member>
        <member name="T:CrossCutterN.Weaver.Reference.Base.Switch.IAspectSwitchBuilderReference">
            <summary>
            Reference to <see cref="T:CrossCutterN.Base.Switch.IAspectSwitchBuilder"/> interface.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Switch.IAspectSwitchBuilderReference.RegisterSwitchMethod">
            <summary>
            Gets reference to RegisterSwitch method.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Switch.IAspectSwitchBuilderReference.CompleteMethod">
            <summary>
            Gets Reference to Complete method.
            </summary>
        </member>
        <member name="T:CrossCutterN.Weaver.Reference.Base.Switch.IAspectSwitchBuilderReferenceBuilder">
            <summary>
            Reference to <see cref="T:CrossCutterN.Base.Switch.IAspectSwitchBuilder"/> interface.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Switch.IAspectSwitchBuilderReferenceBuilder.RegisterSwitchMethod">
            <summary>
            Sets reference to RegisterSwitch method.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Switch.IAspectSwitchBuilderReferenceBuilder.CompleteMethod">
            <summary>
            Sets reference to Complete method.
            </summary>
        </member>
        <member name="T:CrossCutterN.Weaver.Reference.Base.Switch.IAspectSwitchGlancerReference">
            <summary>
            Reference to <see cref="T:CrossCutterN.Base.Switch.IAspectSwitchGlancer"/> interface.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Switch.IAspectSwitchGlancerReference.IsOnMethod">
            <summary>
            Gets reference to IsOn method.
            </summary>
        </member>
        <member name="T:CrossCutterN.Weaver.Reference.Base.Switch.IAspectSwitchGlancerReferenceBuilder">
            <summary>
            Reference to <see cref="T:CrossCutterN.Base.Switch.IAspectSwitchBuilder"/> interface to be built up.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Switch.IAspectSwitchGlancerReferenceBuilder.IsOnMethod">
            <summary>
            Sets reference to IsOn method.
            </summary>
        </member>
        <member name="T:CrossCutterN.Weaver.Reference.Base.Switch.ISwitchBackStageReference">
            <summary>
            Reference to <see cref="T:CrossCutterN.Base.Switch.SwitchBackStage"/> class.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Switch.ISwitchBackStageReference.GlancerGetterReference">
            <summary>
            Gets reference to getter method of Glancer property.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Switch.ISwitchBackStageReference.BuilderGetterReference">
            <summary>
            Gets reference to getter of Builder property.
            </summary>
        </member>
        <member name="T:CrossCutterN.Weaver.Reference.Base.Switch.ISwitchBackStageReferenceBuilder">
            <summary>
            Reference to <see cref="T:CrossCutterN.Base.Switch.SwitchBackStage"/> class to be built up.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Switch.ISwitchBackStageReferenceBuilder.GlancerGetterReference">
            <summary>
            Sets reference to getter method of Glancer property.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Switch.ISwitchBackStageReferenceBuilder.BuilderGetterReference">
            <summary>
            Sets reference to getter method of Builder property.
            </summary>
        </member>
        <member name="T:CrossCutterN.Weaver.Reference.Base.Switch.SwitchBackStageReference">
            <summary>
            Reference to <see cref="T:CrossCutterN.Base.Switch.SwitchBackStage"/> class implementation.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Reference.Base.Switch.SwitchBackStageReference.#ctor(Mono.Cecil.ModuleDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:CrossCutterN.Weaver.Reference.Base.Switch.SwitchBackStageReference"/> class.
            </summary>
            <param name="module">The module that this reference is built for.</param>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Switch.SwitchBackStageReference.CrossCutterN#Weaver#Reference#Base#Switch#ISwitchBackStageReference#GlancerGetterReference">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Switch.SwitchBackStageReference.GlancerGetterReference">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Switch.SwitchBackStageReference.CrossCutterN#Weaver#Reference#Base#Switch#ISwitchBackStageReference#BuilderGetterReference">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.Base.Switch.SwitchBackStageReference.BuilderGetterReference">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Reference.Base.Switch.SwitchBackStageReference.Build">
            <inheritdoc/>
        </member>
        <member name="T:CrossCutterN.Weaver.Reference.IBaseReference">
            <summary>
            Interface of base module content reference.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.IBaseReference.MetadataFactory">
            <summary>
            Gets reference to <see cref="T:CrossCutterN.Base.Metadata.MetadataFactory"/> class.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.IBaseReference.ExecutionContext">
            <summary>
            Gets reference to <see cref="T:CrossCutterN.Base.Metadata.IExecutionContext"/> interface.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.IBaseReference.Execution">
            <summary>
            Gets reference to <see cref="T:CrossCutterN.Base.Metadata.IExecutionBuilder"/> interface.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.IBaseReference.Return">
            <summary>
            Gets reference to <see cref="T:CrossCutterN.Base.Metadata.IReturnBuilder"/> interface.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.IBaseReference.Parameter">
            <summary>
            Gets reference to <see cref="T:CrossCutterN.Base.Metadata.IParameterBuilder"/> interface.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.IBaseReference.CustomAttribute">
            <summary>
            Gets reference to <see cref="T:CrossCutterN.Base.Metadata.ICustomAttributeBuilder"/> interface.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.IBaseReference.AttributeProperty">
            <summary>
            Gets reference to <see cref="T:CrossCutterN.Base.Metadata.IAttributeProperty"/> interface.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.IBaseReference.Builder">
            <summary>
            Gets reference to <see cref="T:CrossCutterN.Base.Switch.IAspectSwitchBuilder"/> interface.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.IBaseReference.BackStage">
            <summary>
            Gets reference to <see cref="T:CrossCutterN.Base.Switch.SwitchBackStage"/> class.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Reference.IBaseReference.Glancer">
            <summary>
            Gets reference to <see cref="T:CrossCutterN.Base.Switch.IAspectSwitchGlancer"/> interface.
            </summary>
        </member>
        <member name="T:CrossCutterN.Weaver.Reference.ReferenceBase">
            <summary>
            Base class for references.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Reference.ReferenceBase.#ctor(Mono.Cecil.ModuleDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:CrossCutterN.Weaver.Reference.ReferenceBase"/> class.
            </summary>
            <param name="module">The module that this reference is declared for.</param>
        </member>
        <member name="M:CrossCutterN.Weaver.Reference.ReferenceBase.GetType(System.Int32)">
            <summary>
            Gets type reference according to key.
            </summary>
            <param name="internalId">Internal Id of the type..</param>
            <returns>The type reference retrieved.</returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Reference.ReferenceBase.AddType(System.Type)">
            <summary>
            Sets type reference and its key.
            </summary>
            <param name="type">The type reference.</param>
            <returns>Internal id of the added type reference.</returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Reference.ReferenceBase.GetMethod(System.Int32)">
            <summary>
            Gets method reference according to key.
            </summary>
            <param name="internalId">Internal id of the method.</param>
            <returns>The method reference.</returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Reference.ReferenceBase.AddMethod(System.Reflection.MethodInfo)">
            <summary>
            Adds a method reference.
            </summary>
            <param name="method">The method reference.</param>
            <returns>Internal Id of the added method reference.</returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Reference.ReferenceBase.CompleteAdding">
            <summary>
            Complete adding operations. After calling this method, no adding method or type can be done.
            </summary>
        </member>
        <member name="T:CrossCutterN.Weaver.Reference.ReferenceFactory">
            <summary>
            Base reference factory.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Reference.ReferenceFactory.InitializeBaseReference(Mono.Cecil.ModuleDefinition)">
            <summary>
            Initializes a new instance of of <see cref="T:CrossCutterN.Weaver.Reference.IBaseReference"/> interface.
            </summary>
            <param name="module">The current module that this <see cref="T:CrossCutterN.Weaver.Reference.IBaseReference"/> is for.</param>
            <returns>The <see cref="T:CrossCutterN.Weaver.Reference.IBaseReference"/> initialized.</returns>
        </member>
        <member name="T:CrossCutterN.Weaver.Statistics.AssemblyWeavingStatistics">
            <summary>
            Assembly weaving statistics.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Statistics.AssemblyWeavingStatistics.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CrossCutterN.Weaver.Statistics.AssemblyWeavingStatistics"/> class.
            </summary>
            <param name="assemblyName">Name of the assembly.</param>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.AssemblyWeavingStatistics.AssemblyName">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.AssemblyWeavingStatistics.Exception">
            <summary>
            Gets or sets exceptions happened during weaving.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.AssemblyWeavingStatistics.ModuleWeavingStatistics">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.AssemblyWeavingStatistics.MethodJoinPointCount">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.AssemblyWeavingStatistics.PropertyGetterJoinPointCount">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.AssemblyWeavingStatistics.PropertyJoinPointCount">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.AssemblyWeavingStatistics.PropertySetterJoinPointCount">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.AssemblyWeavingStatistics.WeavedClassCount">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.AssemblyWeavingStatistics.WeavedMethodPropertyCount">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.AssemblyWeavingStatistics.WeavedMethodCount">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.AssemblyWeavingStatistics.WeavedModuleCount">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.AssemblyWeavingStatistics.WeavedPropertyCount">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.AssemblyWeavingStatistics.WeavedSwitchCount">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Statistics.AssemblyWeavingStatistics.AddModuleWeavingStatistics(CrossCutterN.Weaver.Statistics.IModuleWeavingStatistics)">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Statistics.AssemblyWeavingStatistics.Build">
            <inheritdoc/>
        </member>
        <member name="T:CrossCutterN.Weaver.Statistics.ClassWeavingStatistics">
            <summary>
            Weaving statistics of class.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Statistics.ClassWeavingStatistics.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CrossCutterN.Weaver.Statistics.ClassWeavingStatistics"/> class.
            </summary>
            <param name="name">Name of the class.</param>
            <param name="fullName">Full name of the class.</param>
            <param name="nameSpace">namespace of the class.</param>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.ClassWeavingStatistics.FullName">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.ClassWeavingStatistics.Name">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.ClassWeavingStatistics.Namespace">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.ClassWeavingStatistics.MethodWeavingStatistics">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.ClassWeavingStatistics.PropertyWeavingStatistics">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.ClassWeavingStatistics.SwitchWeavingRecords">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.ClassWeavingStatistics.WeavedMethodPropertyCount">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.ClassWeavingStatistics.WeavedMethodCount">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.ClassWeavingStatistics.WeavedPropertyCount">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.ClassWeavingStatistics.MethodJoinPointCount">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.ClassWeavingStatistics.PropertyGetterJoinPointCount">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.ClassWeavingStatistics.PropertySetterJoinPointCount">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.ClassWeavingStatistics.PropertyJoinPointCount">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.ClassWeavingStatistics.WeavedSwitchCount">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Statistics.ClassWeavingStatistics.AddMethodWeavingStatistics(CrossCutterN.Weaver.Statistics.IMethodWeavingStatistics)">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Statistics.ClassWeavingStatistics.AddPropertyWeavingStatistics(CrossCutterN.Weaver.Statistics.IPropertyWeavingStatistics)">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Statistics.ClassWeavingStatistics.AddSwitchWeavingRecord(CrossCutterN.Weaver.Statistics.ISwitchWeavingRecord)">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Statistics.ClassWeavingStatistics.Build">
            <inheritdoc/>
        </member>
        <member name="T:CrossCutterN.Weaver.Statistics.IAssemblyWeavingStatistics">
            <summary>
            Assembly weaving statistics.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IAssemblyWeavingStatistics.AssemblyName">
            <summary>
            Gets name of the assembly.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IAssemblyWeavingStatistics.WeavedModuleCount">
            <summary>
            Gets count of weaved modules.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IAssemblyWeavingStatistics.WeavedClassCount">
            <summary>
            Gets count of weaved classes.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IAssemblyWeavingStatistics.WeavedMethodCount">
            <summary>
            Gets count of weaved methods.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IAssemblyWeavingStatistics.WeavedPropertyCount">
            <summary>
            Gets count of weaved properties.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IAssemblyWeavingStatistics.WeavedMethodPropertyCount">
            <summary>
            Gets sum of count of weaved methods and properties.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IAssemblyWeavingStatistics.MethodJoinPointCount">
            <summary>
            Gets count of join points injected into methods.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IAssemblyWeavingStatistics.PropertyGetterJoinPointCount">
            <summary>
            Gets count of join points injected to property getters.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IAssemblyWeavingStatistics.PropertySetterJoinPointCount">
            <summary>
            Gets count of join points injected into property setters.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IAssemblyWeavingStatistics.PropertyJoinPointCount">
            <summary>
            Gets count of join points injected to properties.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IAssemblyWeavingStatistics.WeavedSwitchCount">
            <summary>
            Gets count of injected aspect switches.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IAssemblyWeavingStatistics.Exception">
            <summary>
            Gets exception happened during weaving.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IAssemblyWeavingStatistics.ModuleWeavingStatistics">
            <summary>
            Gets weaving statistics for modules inside the assembly.
            </summary>
        </member>
        <member name="T:CrossCutterN.Weaver.Statistics.IAssemblyWeavingStatisticsBuilder">
            <summary>
            Assembly weaving statistics builder.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IAssemblyWeavingStatisticsBuilder.Exception">
            <summary>
            Sets exception happened during weaving.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Statistics.IAssemblyWeavingStatisticsBuilder.AddModuleWeavingStatistics(CrossCutterN.Weaver.Statistics.IModuleWeavingStatistics)">
            <summary>
            Adds module weaving statistics into the assembly.
            </summary>
            <param name="statistics">Module weaving statistics.</param>
        </member>
        <member name="T:CrossCutterN.Weaver.Statistics.ICanAddMethodWeavingRecord">
            <summary>
            Statistics that contains method weaving record, implementation should be class weaving statistics.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Statistics.ICanAddMethodWeavingRecord.AddWeavingRecord(CrossCutterN.Weaver.Statistics.IWeavingRecord)">
            <summary>
            Adds a method weaving record.
            </summary>
            <param name="record">Method weaving record to be added.</param>
        </member>
        <member name="T:CrossCutterN.Weaver.Statistics.ICanAddMethodWeavingRecord`1">
            <summary>
            Statistics that contains method weaving record and can be built to a certain type.
            </summary>
            <typeparam name="T">The type that this interface can be built to.</typeparam>
        </member>
        <member name="T:CrossCutterN.Weaver.Statistics.ICanAddPropertyWeavingRecord">
            <summary>
            Statistics that contains method weaving record and be built to <see cref="T:CrossCutterN.Weaver.Statistics.IPropertyWeavingStatistics"/>, implementation should be class weaving statistics.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.ICanAddPropertyWeavingRecord.GetterContainer">
            <summary>
            Gets getter weaving statistics container.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.ICanAddPropertyWeavingRecord.SetterContainer">
            <summary>
            Gets setter weaving statistics container.
            </summary>
        </member>
        <member name="T:CrossCutterN.Weaver.Statistics.IClassWeavingStatistics">
            <summary>
            Class weaving statistics.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IClassWeavingStatistics.Name">
            <summary>
            Gets name of the class.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IClassWeavingStatistics.FullName">
            <summary>
            Gets full name of the class.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IClassWeavingStatistics.Namespace">
            <summary>
            Gets namespace of the class.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IClassWeavingStatistics.WeavedMethodCount">
            <summary>
            Gets count of weaved methods in the class.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IClassWeavingStatistics.WeavedPropertyCount">
            <summary>
            Gets count of weaved properties in the class.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IClassWeavingStatistics.WeavedMethodPropertyCount">
            <summary>
            Gets the sum of count of weaved methods and properties.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IClassWeavingStatistics.MethodJoinPointCount">
            <summary>
            Gets count of join points injected to methods.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IClassWeavingStatistics.PropertyGetterJoinPointCount">
            <summary>
            Gets count of join point injected to property getters.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IClassWeavingStatistics.PropertySetterJoinPointCount">
            <summary>
            Gets count of join point injected to property setters.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IClassWeavingStatistics.PropertyJoinPointCount">
            <summary>
            Gets count of join point injected to properties.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IClassWeavingStatistics.WeavedSwitchCount">
            <summary>
            Gets count of aspect switches injected.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IClassWeavingStatistics.MethodWeavingStatistics">
            <summary>
            Gets statistics of weaved methods.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IClassWeavingStatistics.PropertyWeavingStatistics">
            <summary>
            Gets statistics of weaved properties.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IClassWeavingStatistics.SwitchWeavingRecords">
            <summary>
            Gets statistics of switches injected.
            </summary>
        </member>
        <member name="T:CrossCutterN.Weaver.Statistics.IClassWeavingStatisticsBuilder">
            <summary>
            Class weaving statistics to be built up.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Statistics.IClassWeavingStatisticsBuilder.AddMethodWeavingStatistics(CrossCutterN.Weaver.Statistics.IMethodWeavingStatistics)">
            <summary>
            Adds method weaving statistics.
            </summary>
            <param name="statistics">The method weaving statistics to be added.</param>
        </member>
        <member name="M:CrossCutterN.Weaver.Statistics.IClassWeavingStatisticsBuilder.AddPropertyWeavingStatistics(CrossCutterN.Weaver.Statistics.IPropertyWeavingStatistics)">
            <summary>
            Adds property weaving statistics.
            </summary>
            <param name="statistics">The property weaving statistics to be added.</param>
        </member>
        <member name="M:CrossCutterN.Weaver.Statistics.IClassWeavingStatisticsBuilder.AddSwitchWeavingRecord(CrossCutterN.Weaver.Statistics.ISwitchWeavingRecord)">
            <summary>
            Adds switch weaving record.
            </summary>
            <param name="record">The switch weaving record to be added.</param>
        </member>
        <member name="T:CrossCutterN.Weaver.Statistics.IMethodWeavingStatistics">
            <summary>
            Method weaving statistics.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IMethodWeavingStatistics.Name">
            <summary>
            Gets name of the method.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IMethodWeavingStatistics.Signature">
            <summary>
            Gets signature of the method.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IMethodWeavingStatistics.JoinPointCount">
            <summary>
            Gets number of join points injected in the method.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IMethodWeavingStatistics.Records">
            <summary>
            Gets weaving details for the method.
            </summary>
        </member>
        <member name="T:CrossCutterN.Weaver.Statistics.IModuleWeavingStatistics">
            <summary>
            Module weaving statistics.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IModuleWeavingStatistics.Name">
            <summary>
            Gets name of the module.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IModuleWeavingStatistics.WeavedClassCount">
            <summary>
            Gets count of weaved classes
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IModuleWeavingStatistics.WeavedMethodCount">
            <summary>
            Gets count of weaved methods.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IModuleWeavingStatistics.WeavedPropertyCount">
            <summary>
            Gets count of weaved properties.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IModuleWeavingStatistics.WeavedMethodPropertyCount">
            <summary>
            Gets count of weaved methods and properties.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IModuleWeavingStatistics.WeavedSwitchCount">
            <summary>
            Gets count of injected switches.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IModuleWeavingStatistics.MethodJoinPointCount">
            <summary>
            Gets count of injected join points to methods.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IModuleWeavingStatistics.PropertyGetterJoinPointCount">
            <summary>
            Gets count of injected join points to property getters.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IModuleWeavingStatistics.PropertySetterJoinPointCount">
            <summary>
            Gets count of injected join points to property setters.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IModuleWeavingStatistics.PropertyJoinPointCount">
            <summary>
            Gets count of injected join points to properties.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IModuleWeavingStatistics.AddedAssemblyReferenceCount">
            <summary>
            Gets count of added assembly references.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IModuleWeavingStatistics.ClassWeavingStatistics">
            <summary>
            Gets statistics of weaved classes inside the module
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IModuleWeavingStatistics.AddedAssemblyReferences">
            <summary>
            Gets statistics of added assembly references.
            </summary>
        </member>
        <member name="T:CrossCutterN.Weaver.Statistics.IModuleWeavingStatisticsBuilder">
            <summary>
            Module weaving statistics to be built up.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Statistics.IModuleWeavingStatisticsBuilder.AddClassWeavingStatistics(CrossCutterN.Weaver.Statistics.IClassWeavingStatistics)">
            <summary>
            Adds class weaving statistics.
            </summary>
            <param name="statistics">The class weaving statistics to be added.</param>
        </member>
        <member name="M:CrossCutterN.Weaver.Statistics.IModuleWeavingStatisticsBuilder.AddAssemblyReference(System.String)">
            <summary>
            Adds assembly reference.
            </summary>
            <param name="assembly">Assembly name that is added as a reference.</param>
        </member>
        <member name="T:CrossCutterN.Weaver.Statistics.IPropertyMethodWeavingRecords">
            <summary>
            Property and method detailed weaving record.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IPropertyMethodWeavingRecords.Records">
            <summary>
            Gets the detailed weaving records.
            </summary>
        </member>
        <member name="T:CrossCutterN.Weaver.Statistics.IPropertyWeavingStatistics">
            <summary>
            Property weaving statistics.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IPropertyWeavingStatistics.Name">
            <summary>
            Gets name of the property.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IPropertyWeavingStatistics.FullName">
            <summary>
            Gets full name of the property.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IPropertyWeavingStatistics.GetterJoinPointCount">
            <summary>
            Gets count of getter join points inserted.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IPropertyWeavingStatistics.SetterJoinPointCount">
            <summary>
            Gets count of setter join points inserted.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IPropertyWeavingStatistics.JoinPointCount">
            <summary>
            Gets count of join points injected.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IPropertyWeavingStatistics.GetterRecords">
            <summary>
            Gets detailed getter weaving records.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IPropertyWeavingStatistics.SetterRecords">
            <summary>
            Gets detailed setter weaving records.
            </summary>
        </member>
        <member name="T:CrossCutterN.Weaver.Statistics.ISwitchWeavingRecord">
            <summary>
            Detailed weaving record for switches.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.ISwitchWeavingRecord.Class">
            <summary>
            Gets class that the switch is in.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.ISwitchWeavingRecord.Property">
            <summary>
            Gets property that the switch is in.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.ISwitchWeavingRecord.MethodSignature">
            <summary>
            Gets method that the switch is in.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.ISwitchWeavingRecord.Aspect">
            <summary>
            Gets aspect that the switch belongs to.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.ISwitchWeavingRecord.StaticFieldName">
            <summary>
            Gets the static field name of the switch.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.ISwitchWeavingRecord.Value">
            <summary>
            Gets a value indicating whether the switch is on or off.
            </summary>
        </member>
        <member name="T:CrossCutterN.Weaver.Statistics.IWeavingRecord">
            <summary>
            Detailed weaving record for a join point.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IWeavingRecord.JoinPoint">
            <summary>
            Gets join point.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IWeavingRecord.MethodFullName">
            <summary>
            Gets full name of the method that is weaved.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IWeavingRecord.MethodSignature">
            <summary>
            Gets signature of the method that is weaved.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IWeavingRecord.Sequence">
            <summary>
            Gets sequence of the join point.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.IWeavingRecord.AAspectName">
            <summary>
            Gets name of the aspect, which is also key of the aspect.
            </summary>
        </member>
        <member name="T:CrossCutterN.Weaver.Statistics.MethodWeavingStatistics">
            <summary>
            Method weaving statistics implementation.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Statistics.MethodWeavingStatistics.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CrossCutterN.Weaver.Statistics.MethodWeavingStatistics"/> class.
            </summary>
            <param name="name">Name of the method.</param>
            <param name="signature">Signature of the method.</param>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.MethodWeavingStatistics.Name">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.MethodWeavingStatistics.Signature">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.MethodWeavingStatistics.JoinPointCount">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.MethodWeavingStatistics.Records">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Statistics.MethodWeavingStatistics.AddWeavingRecord(CrossCutterN.Weaver.Statistics.IWeavingRecord)">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Statistics.MethodWeavingStatistics.Build">
            <inheritdoc/>
        </member>
        <member name="T:CrossCutterN.Weaver.Statistics.ModuleWeavingStatistics">
            <summary>
            Module weaving statistics implementation.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Statistics.ModuleWeavingStatistics.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CrossCutterN.Weaver.Statistics.ModuleWeavingStatistics"/> class.
            </summary>
            <param name="name">Name of the module</param>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.ModuleWeavingStatistics.Name">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.ModuleWeavingStatistics.ClassWeavingStatistics">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.ModuleWeavingStatistics.AddedAssemblyReferences">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.ModuleWeavingStatistics.MethodJoinPointCount">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.ModuleWeavingStatistics.PropertyGetterJoinPointCount">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.ModuleWeavingStatistics.PropertyJoinPointCount">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.ModuleWeavingStatistics.PropertySetterJoinPointCount">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.ModuleWeavingStatistics.WeavedClassCount">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.ModuleWeavingStatistics.WeavedMethodPropertyCount">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.ModuleWeavingStatistics.WeavedMethodCount">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.ModuleWeavingStatistics.WeavedPropertyCount">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.ModuleWeavingStatistics.WeavedSwitchCount">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.ModuleWeavingStatistics.AddedAssemblyReferenceCount">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Statistics.ModuleWeavingStatistics.AddClassWeavingStatistics(CrossCutterN.Weaver.Statistics.IClassWeavingStatistics)">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Statistics.ModuleWeavingStatistics.AddAssemblyReference(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Statistics.ModuleWeavingStatistics.Build">
            <inheritdoc/>
        </member>
        <member name="T:CrossCutterN.Weaver.Statistics.PropertyMethodWeavingRecords">
            <summary>
            Property or method weaving records implementation.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.PropertyMethodWeavingRecords.Records">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Statistics.PropertyMethodWeavingRecords.AddWeavingRecord(CrossCutterN.Weaver.Statistics.IWeavingRecord)">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Statistics.PropertyMethodWeavingRecords.Build">
            <inheritdoc/>
        </member>
        <member name="T:CrossCutterN.Weaver.Statistics.PropertyWeavingStatistics">
            <summary>
            Property weaving statistics implementation.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Statistics.PropertyWeavingStatistics.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CrossCutterN.Weaver.Statistics.PropertyWeavingStatistics"/> class.
            </summary>
            <param name="name">Name of the property.</param>
            <param name="fullName">Full name of the property.</param>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.PropertyWeavingStatistics.FullName">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.PropertyWeavingStatistics.Name">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.PropertyWeavingStatistics.GetterJoinPointCount">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.PropertyWeavingStatistics.GetterRecords">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.PropertyWeavingStatistics.SetterJoinPointCount">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.PropertyWeavingStatistics.SetterRecords">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.PropertyWeavingStatistics.JoinPointCount">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.PropertyWeavingStatistics.GetterContainer">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.PropertyWeavingStatistics.SetterContainer">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Statistics.PropertyWeavingStatistics.Build">
            <inheritdoc/>
        </member>
        <member name="T:CrossCutterN.Weaver.Statistics.StatisticsFactory">
            <summary>
            Statistics factory.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Statistics.StatisticsFactory.InitializeWeavingRecord(CrossCutterN.Aspect.Aspect.JoinPoint,System.String,System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of of <see cref="T:CrossCutterN.Weaver.Statistics.IWeavingRecord"/>.
            </summary>
            <param name="joinPoint">Join point</param>
            <param name="aspectName">Name of the aspect, which is also the key of aspect which is involved in the weaving process.</param>
            <param name="methodFullName">Full name of the method weaved.</param>
            <param name="methodSignature">Signature of the method weaved.</param>
            <param name="sequence">Sequence of the join point.</param>
            <returns>The <see cref="T:CrossCutterN.Weaver.Statistics.IWeavingRecord"/> initialized.</returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Statistics.StatisticsFactory.InitializeMethodWeavingRecord(System.String,System.String)">
            <summary>
            Initializes a new instance of of <see cref="T:CrossCutterN.Weaver.Statistics.ICanAddMethodWeavingRecord"/>.
            </summary>
            <param name="name">Name of the method.</param>
            <param name="signature">Signature of the method.</param>
            <returns>The <see cref="T:CrossCutterN.Weaver.Statistics.ICanAddMethodWeavingRecord"/> initialized.</returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Statistics.StatisticsFactory.InitializePropertyWeavingRecord(System.String,System.String)">
            <summary>
            Initializes a new instance of of <see cref="T:CrossCutterN.Weaver.Statistics.ICanAddPropertyWeavingRecord"/>.
            </summary>
            <param name="name">Name of the property.</param>
            <param name="fullName">Full name of the property.</param>
            <returns>The <see cref="T:CrossCutterN.Weaver.Statistics.ICanAddPropertyWeavingRecord"/> initialized.</returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Statistics.StatisticsFactory.InitializeClassWeavingRecord(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of of <see cref="T:CrossCutterN.Weaver.Statistics.IClassWeavingStatisticsBuilder"/>.
            </summary>
            <param name="name">Name of the class.</param>
            <param name="fullName">Full name of the class.</param>
            <param name="nameSpace">namespace of the class.</param>
            <returns>The <see cref="T:CrossCutterN.Weaver.Statistics.IClassWeavingStatisticsBuilder"/> initialized.</returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Statistics.StatisticsFactory.InitializeModuleWeavingRecord(System.String)">
            <summary>
            Initializes a new instance of of <see cref="T:CrossCutterN.Weaver.Statistics.IModuleWeavingStatisticsBuilder"/>.
            </summary>
            <param name="name">Name of the module.</param>
            <returns>The <see cref="T:CrossCutterN.Weaver.Statistics.IModuleWeavingStatisticsBuilder"/> initialized.</returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Statistics.StatisticsFactory.InitializeAssemblyWeavingRecord(System.String)">
            <summary>
            Initializes a new instance of of <see cref="T:CrossCutterN.Weaver.Statistics.IAssemblyWeavingStatisticsBuilder"/>
            </summary>
            <param name="assemblyName">Name of the assembly.</param>
            <returns>The <see cref="T:CrossCutterN.Weaver.Statistics.IAssemblyWeavingStatisticsBuilder"/> initialized.</returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Statistics.StatisticsFactory.InitializeSwitchWeavingRecord(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of of <see cref="T:CrossCutterN.Weaver.Statistics.ISwitchWeavingRecord"/>.
            </summary>
            <param name="clazz">Class that the aspect switch is in.</param>
            <param name="property">Property that the aspect switch is injected in.</param>
            <param name="methodSignature">Signature of method that the aspect switch is injected in.</param>
            <param name="aspect">Name of the aspect of the switch.</param>
            <param name="variable">Static variable name for the aspect switch.</param>
            <param name="value">Value of the aspect switch.</param>
            <returns>The <see cref="T:CrossCutterN.Weaver.Statistics.ISwitchWeavingRecord"/> initialized.</returns>
        </member>
        <member name="T:CrossCutterN.Weaver.Statistics.SwitchWeavingRecord">
            <summary>
            Switch weaving record implementation.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Statistics.SwitchWeavingRecord.#ctor(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CrossCutterN.Weaver.Statistics.SwitchWeavingRecord"/> class.
            </summary>
            <param name="clazz">Class that the aspect switch is injected in.</param>
            <param name="property">Property that the aspect switch is injected in.</param>
            <param name="methodSignature">Signature of method that the aspect switch is injected in.</param>
            <param name="aspect">Name of aspect of the switch.</param>
            <param name="field">Static field name of the aspect switch.</param>
            <param name="value">Value of the aspect switch.</param>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.SwitchWeavingRecord.Class">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.SwitchWeavingRecord.Property">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.SwitchWeavingRecord.MethodSignature">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.SwitchWeavingRecord.Aspect">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.SwitchWeavingRecord.StaticFieldName">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.SwitchWeavingRecord.Value">
            <inheritdoc/>
        </member>
        <member name="T:CrossCutterN.Weaver.Statistics.WeavingRecord">
            <summary>
            Weaving record implementation.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Statistics.WeavingRecord.#ctor(CrossCutterN.Aspect.Aspect.JoinPoint,System.String,System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CrossCutterN.Weaver.Statistics.WeavingRecord"/> class.
            </summary>
            <param name="joinPoint">Join point.</param>
            <param name="aspectName">Name of the aspect, also serves as key of the aspect.</param>
            <param name="methodFullName">Full name of the method weaved.</param>
            <param name="methodSignature">Signature of the method weaved.</param>
            <param name="sequence">Sequence of the join point.</param>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.WeavingRecord.JoinPoint">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.WeavingRecord.AAspectName">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.WeavingRecord.MethodFullName">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.WeavingRecord.MethodSignature">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Statistics.WeavingRecord.Sequence">
            <inheritdoc/>
        </member>
        <member name="T:CrossCutterN.Weaver.Switch.ISwitchableSection">
            <summary>
            Switchable section record for weaving process.
            Introducing this approach to apply switching off some local variable initializations which may take too much time.
            Like <see cref="T:CrossCutterN.Base.Metadata.IExecution"/>, <see cref="T:CrossCutterN.Base.Metadata.IExecutionContext"/>, <see cref="T:CrossCutterN.Base.Metadata.IReturn"/>
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Switch.ISwitchableSection.HasSetStartEndInstruction">
            <summary>
            Gets a value indicating whether the switchable section has set start and end instructions.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Switch.ISwitchableSection.StartIndex">
            <summary>
            Sets index of start instruction for this section in an instruction list.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Switch.ISwitchableSection.EndIndex">
            <summary>
            Sets index of end instruction for this section in an instruction list.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Switch.ISwitchableSection.SectionLength">
            <summary>
            Gets the value of the section length, which matters when deciding to use br_s or br
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Switch.ISwitchableSection.StartInstruction">
            <summary>
            Gets start instruction of this switchable section.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Switch.ISwitchableSection.EndInstruction">
            <summary>
            Gets end instruction of this switchable section.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Switch.ISwitchableSection.SetInstructions(System.Collections.Generic.IList{Mono.Cecil.Cil.Instruction},Mono.Cecil.Cil.Instruction)">
            <summary>
            Sets start and end instructions for this section according to instruction list and default end instruction.
            </summary>
            <param name="instructions">The instruction list that includes instructions of this section.</param>
            <param name="defaultEndInstruction">default ending instruction in case the ending instruction is not included in the instruction list.</param>
        </member>
        <member name="M:CrossCutterN.Weaver.Switch.ISwitchableSection.AdjustEndInstruction(Mono.Cecil.Cil.Instruction,Mono.Cecil.Cil.Instruction)">
            <summary>
            Adjusts end instruction to a new one, if the current ending instruction is the same with originalEnd.
            </summary>
            <param name="originalEnd">Original ending instruction</param>
            <param name="newEnd">new ending instruction.</param>
        </member>
        <member name="T:CrossCutterN.Weaver.Switch.ISwitchHandler">
            <summary>
            Switch handler for a class.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Switch.ISwitchHandler.GetData">
            <summary>
            Gets all necessary data to initialize all switches in a weaved class.
            </summary>
            <returns>All necessary initialization data.</returns>
        </member>
        <member name="T:CrossCutterN.Weaver.Switch.ISwitchHandlerBuilder">
            <summary>
            Switch handler to be built up.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Switch.ISwitchHandlerBuilder.GetSwitchField(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Gets the field reference of the switch, the reference will be created if it doesn't exist.
            </summary>
            <param name="property">Property that the aspect switch is in.</param>
            <param name="methodSignature">Signature of method that the aspect switch is in.</param>
            <param name="aspect">Name of the aspect of the switch.</param>
            <param name="value">Value of the switch, if the switch doesn't exist, this value will only be applied if the reference doesn't exist.</param>
            <returns>The field reference reteieved.</returns>
        </member>
        <member name="T:CrossCutterN.Weaver.Switch.ISwitchSet">
            <summary>
            Switch set used during weaving to decide whether some section is switchable or not, and provide the set of switches if it is switchable.
            This approach means to optimize the performance a bit by switching off the local variables that takes time to initialize and avoiding adding switches to sections that may not be switchable at all.
            For example, switchable aspect A and B both needs <see cref="T:CrossCutterN.Base.Metadata.IExecution"/> local variable for their advices. If both A and B are switched off, then Initialization of <see cref="T:CrossCutterN.Base.Metadata.IExecution"/>  should be switched off.
            Considering initializing <see cref="T:CrossCutterN.Base.Metadata.IExecution"/> variable takes a long time to initialize, switching it off will help to boost the performance.
            However, if one of the aspects, let's say A, is not switchable, then we shouldn't apply switching to initialization of <see cref="T:CrossCutterN.Base.Metadata.IExecution"/> because it will be needed for aspect B anyway.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Switch.ISwitchSet.Switches">
            <summary>
            Gets the switch set in case a code section is switchable.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Switch.ISwitchSet.RegisterSwitch(System.Int32)">
            <summary>
            Registers a switch with the static field index of that switch.
            </summary>
            <param name="fieldIndex">Index of the switch static field</param>
            <returns>Whether the registration is successful. If the section is not switchable or </returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Switch.ISwitchSet.SetUnSwitchable">
            <summary>
            Sets the switch set to be unswitchable, this method should be called when an unswitchable aspect is applied to a switchable section.
            </summary>
        </member>
        <member name="T:CrossCutterN.Weaver.Switch.SwitchableSection">
            <summary>
            Switchable section implementation.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Switch.SwitchableSection.StartIndex">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Switch.SwitchableSection.EndIndex">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Switch.SwitchableSection.SectionLength">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Switch.SwitchableSection.StartInstruction">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Switch.SwitchableSection.EndInstruction">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Switch.SwitchableSection.HasSetStartEndInstruction">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Switch.SwitchableSection.SetInstructions(System.Collections.Generic.IList{Mono.Cecil.Cil.Instruction},Mono.Cecil.Cil.Instruction)">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Switch.SwitchableSection.Reset">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Switch.SwitchableSection.AdjustEndInstruction(Mono.Cecil.Cil.Instruction,Mono.Cecil.Cil.Instruction)">
            <inheritdoc/>
        </member>
        <member name="T:CrossCutterN.Weaver.Switch.SwitchFactory">
            <summary>
            Switch factory.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Switch.SwitchFactory.InitializeSwitchData(System.String,System.String,System.String,Mono.Cecil.FieldReference,System.Boolean)">
            <summary>
            Initializes a new instance of if <see cref="T:CrossCutterN.Weaver.Switch.SwitchInitializingData"/>
            </summary>
            <param name="property">Property that the switch is injected into.</param>
            <param name="methodSignature">Signature of method that the switch is injected into.</param>
            <param name="aspect">Name of aspect of the switch.</param>
            <param name="field">Static field name of the switch.</param>
            <param name="value">Value of the switch.</param>
            <returns>The <see cref="T:CrossCutterN.Weaver.Switch.SwitchInitializingData"/> initialized.</returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Switch.SwitchFactory.InitializeSwitchHandler(Mono.Cecil.TypeDefinition,Mono.Cecil.TypeReference)">
            <summary>
            Initializes a new instance of of <see cref="T:CrossCutterN.Weaver.Switch.ISwitchHandlerBuilder"/>.
            </summary>
            <param name="type">Class that the switch handler is for.</param>
            <param name="reference">Reference to the type field of the aspect switch.</param>
            <returns>The <see cref="T:CrossCutterN.Weaver.Switch.ISwitchHandlerBuilder"/> initialized.</returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Switch.SwitchFactory.InitializeSwitchSet">
            <summary>
            Initializes a new instance of of <see cref="T:CrossCutterN.Weaver.Switch.ISwitchSet"/>.
            </summary>
            <returns>The <see cref="T:CrossCutterN.Weaver.Switch.ISwitchSet"/> initialized.</returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Switch.SwitchFactory.InitializeSwitchableSection">
            <summary>
            Initializes a new instance of of <see cref="T:CrossCutterN.Weaver.Switch.ISwitchableSection"/>.
            </summary>
            <returns>The <see cref="T:CrossCutterN.Weaver.Switch.ISwitchableSection"/> initialized.</returns>
        </member>
        <member name="T:CrossCutterN.Weaver.Switch.SwitchHandler">
            <summary>
            Switch handler implementation.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Switch.SwitchHandler.#ctor(Mono.Cecil.TypeDefinition,Mono.Cecil.TypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:CrossCutterN.Weaver.Switch.SwitchHandler"/> class.
            </summary>
            <param name="type">Class that switchhandler is for.</param>
            <param name="reference">Reference to type of the switch field.</param>
        </member>
        <member name="M:CrossCutterN.Weaver.Switch.SwitchHandler.GetData">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Switch.SwitchHandler.GetSwitchField(System.String,System.String,System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Switch.SwitchHandler.Build">
            <inheritdoc/>
        </member>
        <member name="T:CrossCutterN.Weaver.Switch.SwitchInitializingData">
            <summary>
            Data used to initialize switch information.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Switch.SwitchInitializingData.#ctor(System.String,System.String,System.String,Mono.Cecil.FieldReference,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CrossCutterN.Weaver.Switch.SwitchInitializingData"/> class.
            </summary>
            <param name="property">Property that the aspect switch is injected to.</param>
            <param name="methodSignature">Signature of method that the aspect switch is injected to.</param>
            <param name="aspect">Aspect name of the swtich.</param>
            <param name="field">Field name of the aspect switch.</param>
            <param name="value">Value of the switch.</param>
        </member>
        <member name="P:CrossCutterN.Weaver.Switch.SwitchInitializingData.Property">
            <summary>
            Gets property that the aspect switch is injected to.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Switch.SwitchInitializingData.MethodSignature">
            <summary>
            Gets signature of method that the aspect switch is injected to.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Switch.SwitchInitializingData.Aspect">
            <summary>
            Gets aspect name of the switch.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Switch.SwitchInitializingData.Field">
            <summary>
            Gets field name of the aspect switch.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Switch.SwitchInitializingData.Value">
            <summary>
            Gets a value indicating whether the aspect switch is turned on.
            </summary>
        </member>
        <member name="T:CrossCutterN.Weaver.Switch.SwitchSet">
            <summary>
            Switch set implementation.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Switch.SwitchSet.Switches">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Switch.SwitchSet.Reset">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Switch.SwitchSet.RegisterSwitch(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Switch.SwitchSet.SetUnSwitchable">
            <inheritdoc/>
        </member>
        <member name="T:CrossCutterN.Weaver.Utilities.AdviceValidator">
            <summary>
            Advice validator. This class verifies format of input advice.
            Considering user may extend aspect module to have customized aspects, validation is put in weaver module.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Utilities.AdviceValidator.Validate(CrossCutterN.Aspect.Aspect.JoinPoint,System.Reflection.MethodInfo)">
            <summary>
            Validate an advice method based on the join point it is to be injected to.
            </summary>
            <param name="joinPoint">Join point that the advice method to be injected to.</param>
            <param name="advice">Advice method to be validated.</param>
            <returns>Flag for parameter pattern of the advice.</returns>
        </member>
        <member name="T:CrossCutterN.Weaver.Utilities.ConcernAdapter">
            <summary>
            Utility that converts assembly content metadata from Mono.Cecil form to CrossCutterN form.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Utilities.ConcernAdapter.Convert(Mono.Cecil.MethodDefinition,System.Collections.Generic.IReadOnlyCollection{CrossCutterN.Aspect.Metadata.ICustomAttribute})">
            <summary>
            Convert method from Mono.Cecil.MethodDefinition to <see cref="T:CrossCutterN.Aspect.Metadata.IMethod"/>.
            </summary>
            <param name="method">The method to be converted.</param>
            <param name="classCustomAttributes">Custom attributes applied to the class which contains the method.</param>
            <returns>The <see cref="T:CrossCutterN.Aspect.Metadata.IMethod"/> converted to.</returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Utilities.ConcernAdapter.Convert(Mono.Cecil.PropertyDefinition,System.Collections.Generic.IReadOnlyCollection{CrossCutterN.Aspect.Metadata.ICustomAttribute})">
            <summary>
            Convert property from Mono.Cecil.PropertyDefinition to <see cref="T:CrossCutterN.Aspect.Metadata.IProperty"/>
            </summary>
            <param name="property">The property to be converted.</param>
            <param name="classCustomAttributes">Custom attributes applied to the class which contains the property.</param>
            <returns>The <see cref="T:CrossCutterN.Aspect.Metadata.IProperty"/> converted to.</returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Utilities.ConcernAdapter.Convert(Mono.Cecil.CustomAttribute,System.Int32)">
            <summary>
            Convert Mono.Cecil.CustomAttribute to <see cref="T:CrossCutterN.Aspect.Metadata.ICustomAttribute"/>.
            </summary>
            <param name="attribute">The custom attribute to be converted.</param>
            <param name="sequence">Sequence of the attribute in parameter, method, property or class.</param>
            <returns>The <see cref="T:CrossCutterN.Aspect.Metadata.ICustomAttribute"/> converted to.</returns>
        </member>
        <member name="T:CrossCutterN.Weaver.Utilities.DefinitionUtility">
            <summary>
            Utility to retrieve assembly content information from Mono.Cecil form.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Utilities.DefinitionUtility.GetSignature(Mono.Cecil.MethodDefinition)">
            <summary>
            Gets method signature which is generally recognized and used in CrossCutterN.
            </summary>
            <param name="method">Method definition.</param>
            <returns>Signature of the method which will be recognized and used in CrossCutterN.</returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Utilities.DefinitionUtility.GetFullName(Mono.Cecil.TypeDefinition)">
            <summary>
            Gets full name of a class which will be generally recognized and used in CrossCutterN.
            </summary>
            <param name="type">The class full name of which will be retrieved.</param>
            <returns>Full name of a class which will be generally recognized and used in CrossCutterN</returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Utilities.DefinitionUtility.IsVoidReturn(Mono.Cecil.MethodDefinition)">
            <summary>
            Finds out if a method is of void return type.
            </summary>
            <param name="method">The method to be checked.</param>
            <returns>True if the method does have void return type, false elsewise.</returns>
        </member>
        <member name="T:CrossCutterN.Weaver.Utilities.FieldReferenceComparer">
            <summary>
            Comparer utility for field reference.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Utilities.FieldReferenceComparer.Equals(Mono.Cecil.FieldReference,Mono.Cecil.FieldReference)">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Utilities.FieldReferenceComparer.GetHashCode(Mono.Cecil.FieldReference)">
            <inheritdoc/>
        </member>
        <member name="T:CrossCutterN.Weaver.Utilities.IResetable">
            <summary>
            Class that can be reset.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Utilities.IResetable.Reset">
            <summary>
            Resets the internal state of the class.
            </summary>
        </member>
        <member name="T:CrossCutterN.Weaver.Utilities.JoinPointCollectionComparer">
            <summary>
            Utility comparer for two collections of join points.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Utilities.JoinPointCollectionComparer.PointCutEquals(System.Collections.Generic.IReadOnlyCollection{CrossCutterN.Aspect.Aspect.JoinPoint},System.Collections.Generic.IReadOnlyCollection{CrossCutterN.Aspect.Aspect.JoinPoint})">
            <summary>
            Checks if two collections contains exactly the same set of join points.
            </summary>
            <param name="collection1">One collection.</param>
            <param name="collection2">The other collection.</param>
            <returns>True if two collections contains the same set of point cuts, false elsewise.</returns>
        </member>
        <member name="T:CrossCutterN.Weaver.Utilities.ReflectionUtility">
            <summary>
            Utility to handle reflection related features.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Utilities.ReflectionUtility.IsVoidReturn(System.Reflection.MethodInfo)">
            <summary>
            Checks if a method is of void return.
            </summary>
            <param name="method">The method to be checked.</param>
            <returns>True if the method is of void return, false elsewise.</returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Utilities.ReflectionUtility.GetSignatureWithTypeFullName(System.Reflection.MethodInfo)">
            <summary>
            Gets the formatted method signature with full class name of a method, the format is generally used by CrossCutterN
            </summary>
            <param name="method">Method whose signature will be retrieved.</param>
            <returns>Signature of the method.</returns>
        </member>
        <member name="T:CrossCutterN.Weaver.Weaver.AdviceInfo">
            <summary>
            Advice information in weaving plan.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.AdviceInfo.#ctor(System.Reflection.MethodInfo,System.String,CrossCutterN.Weaver.Weaver.AdviceParameterFlag,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:CrossCutterN.Weaver.Weaver.AdviceInfo"/> class.
            </summary>
            <param name="advice">Advice method.</param>
            <param name="aspectName">Name of the aspect, also serves as key of aspect.</param>
            <param name="parameterFlag">Flag of parameters of this advice method.</param>
            <param name="isSwitchedOn">Default switch status for this aspect.</param>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.AdviceInfo.Advice">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.AdviceInfo.AspectName">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.AdviceInfo.ParameterFlag">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.AdviceInfo.IsSwitchedOn">
            <inheritdoc/>
        </member>
        <member name="T:CrossCutterN.Weaver.Weaver.AdviceParameterFlag">
            <summary>
            Flags to represent possible parameter types of CrossCutterN advices.
            </summary>
        </member>
        <member name="F:CrossCutterN.Weaver.Weaver.AdviceParameterFlag.None">
            <summary>
            No parameter
            </summary>
        </member>
        <member name="F:CrossCutterN.Weaver.Weaver.AdviceParameterFlag.Context">
            <summary>
            Parameter type of <see cref="T:CrossCutterN.Base.Metadata.IExecutionContext"/>.
            </summary>
        </member>
        <member name="F:CrossCutterN.Weaver.Weaver.AdviceParameterFlag.Execution">
            <summary>
            Parameter type of <see cref="T:CrossCutterN.Base.Metadata.IExecution"/>.
            </summary>
        </member>
        <member name="F:CrossCutterN.Weaver.Weaver.AdviceParameterFlag.Exception">
            <summary>
            Parameter type of System.Exception.
            </summary>
        </member>
        <member name="F:CrossCutterN.Weaver.Weaver.AdviceParameterFlag.Return">
            <summary>
            Parameter type of <see cref="T:CrossCutterN.Base.Metadata.IReturn"/>.
            </summary>
        </member>
        <member name="F:CrossCutterN.Weaver.Weaver.AdviceParameterFlag.HasException">
            <summary>
            Parameter type of bool, used in finally block and indicates whether exception has occured.
            </summary>
        </member>
        <member name="T:CrossCutterN.Weaver.Weaver.AdviceParameterFlagExtension">
            <summary>
            Extention methods to <see cref="T:CrossCutterN.Weaver.Weaver.AdviceParameterFlag"/>.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.AdviceParameterFlagExtension.Contains(CrossCutterN.Weaver.Weaver.AdviceParameterFlag,CrossCutterN.Weaver.Weaver.AdviceParameterFlag)">
            <summary>
            Checks if the given advice parameter flag contains all contents of the other.
            </summary>
            <param name="self">The given advice parameter flag.</param>
            <param name="flag">The advice parameter flag to check against.</param>
            <returns>True if given advice parameter flag does contain all content of the other, false elsewise.</returns>
        </member>
        <member name="T:CrossCutterN.Weaver.Weaver.IAdviceInfo">
            <summary>
            Information of advice in weaving plan.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.IAdviceInfo.Advice">
            <summary>
            Gets aspect method.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.IAdviceInfo.AspectName">
            <summary>
            Gets name of the aspect, which is also used as aspect key.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.IAdviceInfo.ParameterFlag">
            <summary>
            Gets flag of parameters of this advice method.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.IAdviceInfo.IsSwitchedOn">
            <summary>
            Gets a valud indicating whether the aspect is switched on by default.
            </summary>
        </member>
        <member name="T:CrossCutterN.Weaver.Weaver.ICanAddAspect`1">
            <summary>
            Weaver to be built up.
            </summary>
            <typeparam name="T">The Weaver type after built up.</typeparam>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.ICanAddAspect`1.AddAspect(System.String,CrossCutterN.Aspect.Aspect.IAspect,System.Collections.Generic.IReadOnlyDictionary{CrossCutterN.Aspect.Aspect.JoinPoint,System.Int32})">
            <summary>
            Adds and aspect into the weaver.
            </summary>
            <param name="aspectName">Name of the aspect, also used as key of the aspect.</param>
            <param name="aspect">The aspect to be added.</param>
            <param name="sequenceDict">Sequence dictionary for the advices of this aspect.</param>
        </member>
        <member name="T:CrossCutterN.Weaver.Weaver.ICanAddJoinPoint">
            <summary>
            Weaving plan to be built up.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.ICanAddJoinPoint.AddJoinPoint(CrossCutterN.Aspect.Aspect.JoinPoint,System.String,System.Reflection.MethodInfo,System.Int32,CrossCutterN.Weaver.Weaver.AdviceParameterFlag,System.Nullable{System.Boolean})">
            <summary>
            Adds an advice method to the join point.
            </summary>
            <param name="joinPoint">The join point to inject an advice.</param>
            <param name="aspectName">Name of the aspect, also used as key of the aspect.</param>
            <param name="advice">The advice method to be injected.</param>
            <param name="sequence">Sequence of this advice method among all other advices for this join point.</param>
            <param name="flag">Parameter flag for this advice moethod.</param>
            <param name="isSwitchedOn">Default switch status of the aspect.</param>
        </member>
        <member name="T:CrossCutterN.Weaver.Weaver.IlUtilities">
            <summary>
            Utilities functions for IL manipulation.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.IlUtilities.CustomAttributePropertyTypeIsSupported(Mono.Cecil.CustomAttributeArgument)">
            <summary>
            Checks whether type of custom attribute property is supported.
            </summary>
            <param name="argument">Custom attribute argument.</param>
            <returns>True if the type is supported, false elsewise.</returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.IlUtilities.CreateLoadCustomAttributePropertyValueInstruction(Mono.Cecil.Cil.ILProcessor,Mono.Cecil.CustomAttributeArgument)">
            <summary>
            Create instruction for loading custom attribute property value.
            </summary>
            <param name="processor">The <see cref="T:Mono.Cecil.Cil.ILProcessor"/>.</param>
            <param name="argument">Custom attribute argument.</param>
            <returns>The instruction created.</returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.IlUtilities.CreateIndirectLoadInstruction(Mono.Cecil.Cil.ILProcessor,Mono.Cecil.TypeReference)">
            <summary>
            Creates indirect load instruction, for loading parameter value.
            </summary>
            <param name="processor">The <see cref="T:Mono.Cecil.Cil.ILProcessor"/>.</param>
            <param name="type">Type reference of the parameter.</param>
            <returns>The instruction created.</returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.IlUtilities.CreateBoxValueTypeInstruction(Mono.Cecil.Cil.ILProcessor,Mono.Cecil.TypeReference)">
            <summary>
            Creates box value type instruction, for loading value type value into reference type value.
            </summary>
            <param name="processor">The <see cref="T:Mono.Cecil.Cil.ILProcessor"/>.</param>
            <param name="type">Type reference of value type.</param>
            <returns>The instruction created.</returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.IlUtilities.PersistentInstructions(System.Collections.Generic.List{Mono.Cecil.Cil.Instruction},Mono.Cecil.Cil.ILProcessor,Mono.Cecil.Cil.Instruction)">
            <summary>
            Persistent instructions.
            </summary>
            <param name="instructions">Instructions to persist.</param>
            <param name="processor">The MSIL processor from the persistent target.</param>
            <param name="beforeTarget">Instructions will be inserted before this instruction.</param>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.IlUtilities.IsStaticConstructor(Mono.Cecil.MethodDefinition)">
            <summary>
            Checks if the method definition represents a static constructor.
            </summary>
            <param name="method">The method reference.</param>
            <returns>True if the method reference is a static constructor, false elsewise.</returns>
        </member>
        <member name="T:CrossCutterN.Weaver.Weaver.IPropertyWeavingPlan">
            <summary>
            Property weaving plan.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.IPropertyWeavingPlan.GetterPlan">
            <summary>
            Gets weaving plan for getter method.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.IPropertyWeavingPlan.SetterPlan">
            <summary>
            Gets weaving plan for setter method.
            </summary>
        </member>
        <member name="T:CrossCutterN.Weaver.Weaver.IWeaver">
            <summary>
            Weaver to weave new assemblies with methods injected.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.IWeaver.Weave(System.String,System.Boolean,System.String,System.String)">
            <summary>
            Weaves a new assembly according to input assembly and output it according to output path.
            Currently Mono.Cecil implementation isn't complete, that we can't totally use stream to replace file name.
            So we use file name for interface parameter types.
            </summary>
            <param name="inputAssemblyPath">Path of input assembly.</param>
            <param name="includeSymbol">Whether to include symbol file (simply known as pdb files).</param>
            <param name="outputAssemblyPath">Output assembly path</param>
            <param name="strongNameKeyFile">Strong name key file.</param>
            <returns>Weaving statistics of the assembly.</returns>
        </member>
        <member name="T:CrossCutterN.Weaver.Weaver.IWeavingContext">
            <summary>
            Interface for weaving context of a method. Reset method from <see cref="T:CrossCutterN.Weaver.Utilities.IResetable"/> should be called every time when beginning to weave a method/property getter/property/setter.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.IWeavingContext.BaseReference">
            <summary>
            Gets reference to base module.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.IWeavingContext.AssemblyReferences">
            <summary>
            Gets reference to assemblies.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.IWeavingContext.ExecutionContextVariableIndex">
            <summary>
            Gets or sets ndex of <see cref="T:CrossCutterN.Base.Metadata.IExecutionContext"/> variable.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.IWeavingContext.ExecutionVariableIndex">
            <summary>
            Gets or sets index of <see cref="T:CrossCutterN.Base.Metadata.IExecutionContext"/> variable.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.IWeavingContext.ExceptionVariableIndex">
            <summary>
            Gets or sets index of System.Exception variable.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.IWeavingContext.ReturnVariableIndex">
            <summary>
            Gets or sets index of <see cref="T:CrossCutterN.Base.Metadata.IReturn"/> variable.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.IWeavingContext.ReturnValueVariableIndex">
            <summary>
            Gets or sets index of return value variable.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.IWeavingContext.HasExceptionVariableIndex">
            <summary>
            Gets or sets index of HasException variable.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.IWeavingContext.ExceptionHandlerIndex">
            <summary>
            Gets or sets index of exception block handler of a method.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.IWeavingContext.FinallyHandlerIndex">
            <summary>
            Gets or sets index of finally block handler of a method.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.IWeavingContext.TryStartInstruction">
            <summary>
            Gets or sets starting instruction for over all try block, if it's necessary.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.IWeavingContext.EndingInstruction">
            <summary>
            Gets or sets ending instruction for over all try block, if it's necessary.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.IWeavingContext.PendingSwitchIndex">
            <summary>
            Gets or sets index for break instruction that is not filled in the instruction list because of switch.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.IWeavingContext.LocalVariableSwitchFieldDictionary">
            <summary>
            Gets a dictionary that contains mapping between switch fields and local variables.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.IWeavingContext.ExecutionSwitches">
            <summary>
            Gets switch set for <see cref="T:CrossCutterN.Base.Metadata.IExecution"/> local variable initialization in try block.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.IWeavingContext.ReturnSwitches">
            <summary>
            Gets switch set for <see cref="T:CrossCutterN.Base.Metadata.IReturn"/> local variable initialization in try block.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.IWeavingContext.ExecutionContextSwitches">
            <summary>
            Gets switch set for <see cref="T:CrossCutterN.Base.Metadata.IExecutionContext"/> local variable initialization in try block.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.IWeavingContext.ExecutionVariableSwitchableSection">
            <summary>
            Gets switchable section for <see cref="T:CrossCutterN.Base.Metadata.IExecution"/> local variable initialization in try block.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.IWeavingContext.ReturnVariableSwitchableSection">
            <summary>
            Gets switchable section for <see cref="T:CrossCutterN.Base.Metadata.IReturn"/> local variable initialization in try block.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.IWeavingContext.ReturnFinallySwitchableSection">
            <summary>
            Gets switchable section for <see cref="T:CrossCutterN.Base.Metadata.IReturn"/> local variable updating in finally block.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.IWeavingContext.ExecutionContextVariableSwitchableSection">
            <summary>
            Gets switchable section for <see cref="T:CrossCutterN.Base.Metadata.IExecutionContext"/> local variable initialization in try block.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.IWeavingContext.GetLocalVariableForField(Mono.Cecil.FieldReference)">
            <summary>
            Gets local variable index by switch field reference.
            </summary>
            <param name="field">Switch field reference.</param>
            <returns>Local variable index.</returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.IWeavingContext.RecordLocalVariableForField(Mono.Cecil.FieldReference,System.Int32)">
            <summary>
            Records mapping between a switch field reference and a local variable index.
            </summary>
            <param name="field">Switch field reference.</param>
            <param name="variableIndex">Local variable index.</param>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.IWeavingContext.AddTypeReference(System.Type)">
            <summary>
            Adds a reference to a type.
            </summary>
            <param name="type">The type whose reference to be added.</param>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.IWeavingContext.GetMethodReference(System.Reflection.MethodInfo)">
            <summary>
            Gets reference to a method. If the reference doesn't exist in the context, it will be created and returned.
            </summary>
            <param name="info">The method whose reference it to be retrieved.</param>
            <returns>Reference to the input method.</returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.IWeavingContext.GetTypeReference(System.Type)">
            <summary>
            Gets reference to a type. If the reference doesn't exist in the context, it will be created and returned.
            </summary>
            <param name="type">The type whose reference is to be retrieved.</param>
            <returns>Reference to the input type.</returns>
        </member>
        <member name="T:CrossCutterN.Weaver.Weaver.IWeavingPlan">
            <summary>
            Weaving plan.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.IWeavingPlan.PointCut">
            <summary>
            Gets join points in the weaving plan.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.IWeavingPlan.ParameterFlag">
            <summary>
            Gets flag of parameters of the advice.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.IWeavingPlan.GetAdvices(CrossCutterN.Aspect.Aspect.JoinPoint)">
            <summary>
            Gets ordered advices of a join point.
            </summary>
            <param name="joinPoint">The join point.</param>
            <returns>Ordered advice collection.</returns>
        </member>
        <member name="T:CrossCutterN.Weaver.Weaver.IWeavingPlanner">
            <summary>
            Planner to make weaving plans.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.IWeavingPlanner.MakePlan(CrossCutterN.Aspect.Metadata.IMethod)">
            <summary>
            Makes a weaving plan for a method.
            </summary>
            <param name="method">The method to make weaving plan for.</param>
            <returns>The weaving plan made.</returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.IWeavingPlanner.MakePlan(CrossCutterN.Aspect.Metadata.IProperty)">
            <summary>
            Makes a weaving plan for a property.
            </summary>
            <param name="property">The property to make weaving plan for.</param>
            <returns>The weaving plan made.</returns>
        </member>
        <member name="T:CrossCutterN.Weaver.Weaver.MethodWeaver">
            <summary>
            Method weaver for methods and property getter/setters in a class.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.MethodWeaver.#ctor(System.Collections.Generic.IReadOnlyList{CrossCutterN.Aspect.Metadata.ICustomAttribute},CrossCutterN.Weaver.Weaver.IWeavingContext,CrossCutterN.Weaver.Switch.ISwitchHandlerBuilder)">
            <summary>
            Initializes a new instance of the <see cref="T:CrossCutterN.Weaver.Weaver.MethodWeaver"/> class.
            </summary>
            <param name="classCustomAttributes">Custom attributes of the class of the method.</param>
            <param name="context">Method weaving context.</param>
            <param name="switchHandlerBuilder">Builder of switch handler, used for populating switch initialization of the class.</param>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.MethodWeaver.Weave(Mono.Cecil.MethodDefinition,CrossCutterN.Weaver.Weaver.IWeavingPlan,System.String,CrossCutterN.Weaver.Statistics.ICanAddMethodWeavingRecord)">
            <summary>
            Weave the method.
            </summary>
            <param name="method">Method to be weaved.</param>
            <param name="plan">Weaving plan.</param>
            <param name="propertyName">Name of the property in case the method is a getter or setter method.</param>
            <param name="statistics">Weaving statistics.</param>
        </member>
        <member name="T:CrossCutterN.Weaver.Weaver.PropertyWeavingPlan">
            <summary>
            Property weaving plan.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.PropertyWeavingPlan.#ctor(CrossCutterN.Weaver.Weaver.IWeavingPlan,CrossCutterN.Weaver.Weaver.IWeavingPlan)">
            <summary>
            Initializes a new instance of the <see cref="T:CrossCutterN.Weaver.Weaver.PropertyWeavingPlan"/> class.
            </summary>
            <param name="getterPlan">Weaving plan for getter method.</param>
            <param name="setterPlan">Weaving plan for setter method.</param>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.PropertyWeavingPlan.GetterPlan">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.PropertyWeavingPlan.SetterPlan">
            <inheritdoc/>
        </member>
        <member name="T:CrossCutterN.Weaver.Weaver.SwitchInitializationWeaver">
            <summary>
            Switch initialization weaver that addes switch registering into static constructor.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.SwitchInitializationWeaver.Weave(Mono.Cecil.TypeDefinition,CrossCutterN.Weaver.Weaver.IWeavingContext,System.Collections.Generic.IReadOnlyList{CrossCutterN.Weaver.Switch.SwitchInitializingData},CrossCutterN.Weaver.Statistics.IClassWeavingStatisticsBuilder)">
            <summary>
            Add switch registering to a class.
            </summary>
            <param name="clazz">The class to register switch.</param>
            <param name="context">The weaving context.</param>
            <param name="switchData">Data of switches.</param>
            <param name="statistics">Weaving statistics.</param>
        </member>
        <member name="T:CrossCutterN.Weaver.Weaver.Weaver">
            <summary>
            Weaver implementation.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.Weaver.AddAspect(System.String,CrossCutterN.Aspect.Aspect.IAspect,System.Collections.Generic.IReadOnlyDictionary{CrossCutterN.Aspect.Aspect.JoinPoint,System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.Weaver.Weave(System.String,System.Boolean,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.Weaver.Build">
            <inheritdoc/>
        </member>
        <member name="T:CrossCutterN.Weaver.Weaver.WeaverFactory">
            <summary>
            Weaver factory.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.WeaverFactory.InitializeWeaver">
            <summary>
            Initializes a new instance of of <see cref="T:CrossCutterN.Weaver.Weaver.ICanAddAspect`1"/> which can be built to <see cref="T:CrossCutterN.Weaver.Weaver.IWeaver"/>.
            </summary>
            <returns>The <see cref="T:CrossCutterN.Weaver.Weaver.ICanAddAspect`1"/> which can be built to <see cref="T:CrossCutterN.Weaver.Weaver.IWeaver"/> initialized.</returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.WeaverFactory.InitializeAdviceInfo(System.Reflection.MethodInfo,System.String,CrossCutterN.Weaver.Weaver.AdviceParameterFlag,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of of <see cref="T:CrossCutterN.Weaver.Weaver.IAdviceInfo"/>.
            </summary>
            <param name="method">The advice method.</param>
            <param name="aspectName">Name of the aspect, also used as key of aspect.</param>
            <param name="parameterFlag">Flag of advice method parameters.</param>
            <param name="isSwitchedOn">Default switch status.</param>
            <returns>The <see cref="T:CrossCutterN.Weaver.Weaver.IAdviceInfo"/> initialized.</returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.WeaverFactory.InitializeWeavingPlan">
            <summary>
            Initializes a new instance of of <see cref="T:CrossCutterN.Weaver.Weaver.ICanAddJoinPoint"/>.
            </summary>
            <returns>The <see cref="T:CrossCutterN.Weaver.Weaver.ICanAddJoinPoint"/> initialized.</returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.WeaverFactory.InitializeWeavingPlanner">
            <summary>
            Initializes a new instance of of <see cref="T:CrossCutterN.Weaver.Weaver.ICanAddAspect`1"/> which can be built to <see cref="T:CrossCutterN.Weaver.Weaver.IWeavingPlanner"/>.
            </summary>
            <returns>The <see cref="T:CrossCutterN.Weaver.Weaver.ICanAddAspect`1"/> which can be built to <see cref="T:CrossCutterN.Weaver.Weaver.IWeavingPlanner"/> initialized.</returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.WeaverFactory.InitializePropertyWeavingPlan(CrossCutterN.Weaver.Weaver.IWeavingPlan,CrossCutterN.Weaver.Weaver.IWeavingPlan)">
            <summary>
            Initializes a new instance of of <see cref="T:CrossCutterN.Weaver.Weaver.IPropertyWeavingPlan"/>.
            </summary>
            <param name="getterPlan">Weaving plan for getter method.</param>
            <param name="setterPlan">Weaving plan for setter method.</param>
            <returns>The <see cref="T:CrossCutterN.Weaver.Weaver.IPropertyWeavingPlan"/> initialized.</returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.WeaverFactory.InitializeMethodWeavingContext(Mono.Cecil.ModuleDefinition)">
            <summary>
            Initilaizes an instance of <see cref="T:CrossCutterN.Weaver.Weaver.IWeavingContext"/>.
            </summary>
            <param name="module">The module that this weaving context is for.</param>
            <returns>The <see cref="T:CrossCutterN.Weaver.Weaver.IWeavingContext"/> initialized.</returns>
        </member>
        <member name="T:CrossCutterN.Weaver.Weaver.WeavingContext">
            <summary>
            Weaving context implementation.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.WeavingContext.#ctor(Mono.Cecil.ModuleDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:CrossCutterN.Weaver.Weaver.WeavingContext"/> class.
            </summary>
            <param name="module">The module that this weaving context is for.</param>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.WeavingContext.BaseReference">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.WeavingContext.AssemblyReferences">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.WeavingContext.ExecutionContextVariableIndex">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.WeavingContext.ExecutionVariableIndex">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.WeavingContext.ExceptionVariableIndex">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.WeavingContext.ExceptionHandlerIndex">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.WeavingContext.FinallyHandlerIndex">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.WeavingContext.ReturnValueVariableIndex">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.WeavingContext.ReturnVariableIndex">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.WeavingContext.HasExceptionVariableIndex">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.WeavingContext.TryStartInstruction">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.WeavingContext.EndingInstruction">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.WeavingContext.PendingSwitchIndex">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.WeavingContext.ExecutionSwitches">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.WeavingContext.ReturnSwitches">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.WeavingContext.ExecutionContextSwitches">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.WeavingContext.ExecutionVariableSwitchableSection">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.WeavingContext.ReturnVariableSwitchableSection">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.WeavingContext.ReturnFinallySwitchableSection">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.WeavingContext.ExecutionContextVariableSwitchableSection">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.WeavingContext.LocalVariableSwitchFieldDictionary">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.WeavingContext.GetMethodReference(System.Reflection.MethodInfo)">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.WeavingContext.AddTypeReference(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.WeavingContext.GetTypeReference(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.WeavingContext.GetLocalVariableForField(Mono.Cecil.FieldReference)">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.WeavingContext.RecordLocalVariableForField(Mono.Cecil.FieldReference,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.WeavingContext.Reset">
            <inheritdoc/>
        </member>
        <member name="T:CrossCutterN.Weaver.Weaver.WeavingPlan">
            <summary>
            Weaving plan implementation.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.WeavingPlan.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CrossCutterN.Weaver.Weaver.WeavingPlan"/> class.
            </summary>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.WeavingPlan.ParameterFlag">
            <inheritdoc/>
        </member>
        <member name="P:CrossCutterN.Weaver.Weaver.WeavingPlan.PointCut">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.WeavingPlan.AddJoinPoint(CrossCutterN.Aspect.Aspect.JoinPoint,System.String,System.Reflection.MethodInfo,System.Int32,CrossCutterN.Weaver.Weaver.AdviceParameterFlag,System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.WeavingPlan.GetAdvices(CrossCutterN.Aspect.Aspect.JoinPoint)">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.WeavingPlan.Build">
            <inheritdoc/>
        </member>
        <member name="T:CrossCutterN.Weaver.Weaver.WeavingPlanExtension">
            <summary>
            Weaving plan extension.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.WeavingPlanExtension.IsEmpty(CrossCutterN.Weaver.Weaver.IWeavingPlan)">
            <summary>
            Checks whether a weaving plan is empty.
            </summary>
            <param name="plan">The weaving plan to be checked.</param>
            <returns>True if the weaving plan is empty, false if not.</returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.WeavingPlanExtension.IsEmpty(CrossCutterN.Weaver.Weaver.IPropertyWeavingPlan)">
            <summary>
            Checks whether a property weaving plan is empty.
            </summary>
            <param name="plan">The property weaving plan to be checked.</param>
            <returns>True if the property weaving plan is empty, false if not.</returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.WeavingPlanExtension.NeedToStoreReturnValueAsLocalVariable(CrossCutterN.Weaver.Weaver.IWeavingPlan)">
            <summary>
            Checks if return value needs to be stored as local variable during weaving.
            </summary>
            <param name="plan">The weaving plan to be checked.</param>
            <returns>True if return value needs to be stored as local variable, false if not.</returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.WeavingPlanExtension.NeedContextVariable(CrossCutterN.Weaver.Weaver.IWeavingPlan)">
            <summary>
            Checks if <see cref="T:CrossCutterN.Base.Metadata.IExecutionContext"/> variable is needed.
            </summary>
            <param name="plan">The execution plan to be checked.</param>
            <returns>True if <see cref="T:CrossCutterN.Base.Metadata.IExecutionContext"/> variable is needed, false if not.</returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.WeavingPlanExtension.NeedHasExceptionVariable(CrossCutterN.Weaver.Weaver.IWeavingPlan)">
            <summary>
            Checks if HasException variable is needed.
            </summary>
            <param name="plan">The execution plan to be checked.</param>
            <returns>True if HasException variable is needed, false if not.</returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.WeavingPlanExtension.NeedExecutionVariable(CrossCutterN.Weaver.Weaver.IWeavingPlan)">
            <summary>
            Checks if <see cref="T:CrossCutterN.Base.Metadata.IExecution"/> variable is needed.
            </summary>
            <param name="plan">The execution plan to be checked.</param>
            <returns>True if <see cref="T:CrossCutterN.Base.Metadata.IExecution"/> variable is needed, false if not.</returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.WeavingPlanExtension.NeedExceptionVariable(CrossCutterN.Weaver.Weaver.IWeavingPlan)">
            <summary>
            Checks if Exception variable is needed.
            </summary>
            <param name="plan">The execution plan to be checked.</param>
            <returns>True if Exception variable is needed, false if not.</returns>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.WeavingPlanExtension.NeedReturnVariable(CrossCutterN.Weaver.Weaver.IWeavingPlan)">
            <summary>
            Checks if <see cref="T:CrossCutterN.Base.Metadata.IReturn"/> variable is needed.
            </summary>
            <param name="plan">The execution plan to be checked.</param>
            <returns>True if <see cref="T:CrossCutterN.Base.Metadata.IReturn"/> variable is needed, false if not.</returns>
        </member>
        <member name="T:CrossCutterN.Weaver.Weaver.WeavingPlanner">
            <summary>
            Weaving planner implementation.
            </summary>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.WeavingPlanner.AddAspect(System.String,CrossCutterN.Aspect.Aspect.IAspect,System.Collections.Generic.IReadOnlyDictionary{CrossCutterN.Aspect.Aspect.JoinPoint,System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.WeavingPlanner.MakePlan(CrossCutterN.Aspect.Metadata.IMethod)">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.WeavingPlanner.MakePlan(CrossCutterN.Aspect.Metadata.IProperty)">
            <inheritdoc/>
        </member>
        <member name="M:CrossCutterN.Weaver.Weaver.WeavingPlanner.Build">
            <inheritdoc/>
        </member>
    </members>
</doc>
